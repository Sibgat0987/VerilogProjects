$date
   Wed Nov 27 10:36:21 2024
$end

$version
  2024.1
  $dumpfile ("processor.vcd") 
$end

$timescale
  1ps
$end

$scope module Testbench $end
$var reg 1 ! clk $end
$var reg 1 " reset $end
$var integer 32 # verify_count [31:0] $end
$scope module uut $end
$var wire 1 $ clk $end
$var wire 1 % reset $end
$var reg 2 & current_state [1:0] $end
$var reg 2 ' next_state [1:0] $end
$var reg 8 ( current_instruction [7:0] $end
$var reg 8 ) PC [7:0] $end
$var reg 8 * A [7:0] $end
$var reg 8 + B [7:0] $end
$var wire 8 , alu_result [7:0] $end
$var reg 3 - opcode [2:0] $end
$var reg 3 . dest_reg [2:0] $end
$var reg 8 / prev_result [7:0] $end
$var wire 1 0 zero_flag $end
$var wire 1 1 carry_flag $end
$var wire 1 2 overflow_flag $end
$var wire 1 3 negative_flag $end
$var reg 24 4 state_name [23:0] $end
$scope module alu $end
$var wire 8 5 A [7:0] $end
$var wire 8 6 B [7:0] $end
$var wire 3 7 OpCode [2:0] $end
$var reg 8 8 Result [7:0] $end
$var reg 1 9 Zero $end
$var reg 1 : Carry $end
$var reg 1 ; Overflow $end
$var reg 1 < Negative $end
$upscope $end
$scope begin Block47_2 $end
$var integer 32 = i [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end

#0
$dumpvars
0!
1"
b0 #
0$
1%
b0 &
b1 '
b0 (
b0 )
b0 *
b0 +
b0 ,
b0 -
b0 .
bx /
10
01
02
03
bx 4
b0 5
b0 6
b0 7
b0 8
19
0:
0;
0<
bx =
$end

#5000
1!
1$
b110 (

#10000
0!
0$

#15000
1!
1$
b110 (

#20000
0!
0"
0$
0%

#25000
1!
1$
b1 &
b10 '

#30000
0!
0$

#35000
1!
1$
b10 &
b11 '

#40000
0!
0$

#45000
1!
1$
b11 &
b0 '

#50000
0!
0$

#55000
1!
b1 #
1$
b0 &
b1 '
b1 )

#60000
0!
0$

#65000
1!
1$
b1 &
b10 '
b100110 (

#70000
0!
0$

#75000
1!
1$
b10 &
b11 '
b1 -
b1 7

#80000
0!
0$

#85000
1!
1$
b11 &
b0 '

#90000
0!
0$

#95000
1!
b10 #
1$
b0 &
b1 '
b10 )

#100000
0!
0$

#105000
1!
1$
b1 &
b10 '
b1000110 (

#110000
0!
0$

#115000
1!
1$
b10 &
b11 '
b10 -
b10 7

#120000
0!
0$

#125000
1!
1$
b11 &
b0 '

#130000
0!
0$

#135000
1!
b11 #
1$
b0 &
b1 '
b11 )

#140000
0!
0$

#145000
1!
1$
b1 &
b10 '
b1100110 (

#150000
0!
0$

#155000
1!
1$
b10 &
b11 '
b11 -
b11 7

#160000
0!
0$

#165000
1!
1$
b11 &
b0 '

#170000
0!
0$

#175000
1!
b100 #
1$
b0 &
b1 '
b100 )

#180000
0!
0$

#185000
1!
1$
b1 &
b10 '
b10000110 (

#190000
0!
0$

#195000
1!
1$
b10 &
b11 '
b100 -
b100 7

#200000
0!
0$

#205000
1!
1$
b11 &
b0 '

#210000
0!
0$

#215000
1!
b101 #
1$
b0 &
b1 '
b101 )

#220000
0!
0$

#225000
1!
1$
b1 &
b10 '
b10100110 (

#230000
0!
0$

#235000
1!
1$
b10 &
b11 '
b11111111 ,
b101 -
00
13
b101 7
b11111111 8
09
1<

#240000
0!
0$

#245000
1!
1$
b11 &
b0 '

#250000
0!
0$

#255000
1!
b110 #
1$
b0 &
b1 '
b110 )

#260000
0!
0$

#265000
1!
1$
b1 &
b10 '
bx (
